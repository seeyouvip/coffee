#!/bin/sh

# === KONFIGURASIÝA ===
DROPBOX_URL="https://www.dropbox.com/scl/fi/vh7e90swm6kyul4wfn590/Lg_Sttp.txt?rlkey=722bz8rmgyi7esy2npnxifzvt&st=7uic76xg&dl=1"
GOOGLE_DRIVE_URL="https://drive.google.com/uc?export=download&id=1fxtSPF5ELHbIeG534ORf4eqcwu0ZJtKT"
GITHUB_URL="https://raw.githubusercontent.com/seeyouvip/coffee/main/Lg_Sstp"
IHEART_URL="http://sstp.iheart-filepicker.me/Lg_Sstp.txt"
TMP_FILE="/tmp/new_ip.txt"
NETWORK_FILE="/etc/config/network"
SMARTDNS_FILE="/etc/config/smartdns"

# === HÄZIRKI HOSTY OKAÝARYS ===
CURRENT_HOST=$(grep "option server" "$NETWORK_FILE" | awk -F"'" '{print $2}')
echo "[INFO] Häzirki host: $CURRENT_HOST"

# === TÄZE IP/DOMAIN ALMAK ===
download_ip_file() {
    for URL in "$GITHUB_URL" "$GOOGLE_DRIVE_URL" "$DROPBOX_URL" "$IHEART_URL"; do
        echo "[INFO] Synanyşylýar: $URL"
        curl -s -L "$URL" -o "$TMP_FILE"
        if [ $? -eq 0 ] && grep -qE '[a-zA-Z0-9.-]+' "$TMP_FILE"; then
            echo "[OK] Alnan çeşme: $URL"
            return 0
        fi
    done
    echo "[ERROR] Täze IP ýa domain alynmady!"
    return 1
}

if ! download_ip_file; then
    exit 1
fi

NEW_HOST=$(grep -oE '[a-zA-Z0-9.-]+' "$TMP_FILE" | head -n1)

if [ -z "$NEW_HOST" ]; then
    echo "[ERROR] Täze IP ýa domain tapylmady!"
    exit 1
fi

echo "[INFO] Täze host: $NEW_HOST"

# === IP ÇÖZGÜT ===
resolve_host() {
    if echo "$1" | grep -qE '[a-zA-Z]'; then
        nslookup "$1" | awk '/^Address: /{print $2}' | tail -n1
    else
        echo "$1"
    fi
}

RESOLVED_NEW=$(resolve_host "$NEW_HOST")
RESOLVED_CURRENT=$(resolve_host "$CURRENT_HOST")

if [ "$RESOLVED_NEW" = "$RESOLVED_CURRENT" ]; then
    echo "[OK] Täze host bilen häzirki IP birmeňzeş — täzeläp gerek däl."
    rm -f "$TMP_FILE"
    exit 0
fi

# === NETWORK CONFIG TÄZELÄÝÄRIS ===
uci set network.sstp.server="$NEW_HOST"

# === SSTP SAZLAMALARY GOŞÝAR — OPTION GÖRNÜŞDE ===
[ -z "$(uci get network.sstp.mtu 2>/dev/null)" ] && uci set network.sstp.mtu='1350'
[ -z "$(uci get network.sstp.peerdns 2>/dev/null)" ] && uci set network.sstp.peerdns='0'
# dns — öň bar bolan list dns-lary aýyrmak we option görnüşinde ýazmak
uci delete network.sstp.dns 2>/dev/null
uci set network.sstp.dns='127.0.0.1'

uci commit network

# === SMARTDNS CONFIG ARASSALAP TÄZEDEN ÝAZÝAR ===
cat > "$SMARTDNS_FILE" <<EOF
config smartdns
  option server_name 'smartdns'
  option port '6053'
  option bind '127.0.0.1'
  option dns_forward 'true'
  option tcp_server '1'
  option dualstack_ip_selection '0'
  option prefetch_domain '0'
  option serve_expired '1'
  option resolve_local_hostnames '1'
  option auto_set_dnsmasq '1'
  option force_aaaa_soa '0'
  option force_https_soa '0'
  option rr_ttl_min '600'
  option seconddns_port '6553'
  option seconddns_tcp_server '1'
  option seconddns_no_speed_check '0'
  option seconddns_no_rule_addr '0'
  option seconddns_no_rule_nameserver '0'
  option seconddns_no_rule_ipset '0'
  option seconddns_no_rule_soa '0'
  option seconddns_no_dualstack_selection '0'
  option seconddns_no_cache '0'
  option seconddns_force_aaaa_soa '0'
  option coredump '0'
  option ipv6_server '0'
  option enabled '1'
  option seconddns_enabled '1'
  option cache_size '4096'
  option old_port '53'
  option old_enabled '1'
  option old_auto_set_dnsmasq '1'

config server
  option name 'Cloudflare DoH'
  option address 'https://1.1.1.1/dns-query'
  option type 'https'
  option tls_hostname 'cloudflare-dns.com'
  option enabled '1'

config server
  option name 'Google DoH'
  option address 'https://dns.google/dns-query'
  option type 'https'
  option tls_hostname 'dns.google'
  option enabled '1'
EOF

echo "[OK] smartdns konfigurasiýasy täzelendi."

# === SYSCTL NETWORK TIZLIGI SAZLAMALARY ===
echo "[INFO] Network tizligini yokarlandyrmak ucin sysctl sazlamalar girizilyar..."

add_sysctl_setting() {
    SETTING="$1"
    FILE="/etc/sysctl.conf"
    if ! grep -q "^$SETTING" "$FILE"; then
        echo "$SETTING" >> "$FILE"
        echo "[ADDED] $SETTING"
    else
        echo "[SKIPPED] $SETTING eyyam bar"
    fi
}

add_sysctl_setting "net.ipv4.ip_forward=1"
add_sysctl_setting "net.ipv4.tcp_syncookies=1"
add_sysctl_setting "net.ipv4.tcp_mtu_probing=1"
add_sysctl_setting "net.ipv4.tcp_sack=1"
add_sysctl_setting "net.core.default_qdisc=fq"
add_sysctl_setting "net.ipv4.tcp_congestion_control=bbr"
add_sysctl_setting "net.ipv4.tcp_window_scaling=1"

#sysctl -p

echo "[INFO] SmartDNS täzeden başlanylýar..."
/etc/init.d/smartdns restart

# === HIZMATLARY TÄZEDEN BAŞLADÝAR ===
echo "[INFO] Network täzeden başlanylýar..."
/etc/init.d/network restart

# === TEMP FILE ARASSALANÝAR ===
rm -f "$TMP_FILE"

echo "✅ Ähli iş üstünlikli tamamlandy."
